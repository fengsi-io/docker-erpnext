name: Docker Image CI

on:
    push:
        branches:
            - main
            - master
        paths:
            - '.github/workflows/ci.yml'
            - 'nginx/**'
            - 'socketio/**'
            - 'erpnext/**'
            - 'Dockerfile'
    # monthly build mainline
    schedule:
        - cron: '0 0 1 * *'

jobs:
    docker-build-push:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                frappe_version: [version-12]
                erpnext_version: [version-12]
                target: [frappe-nginx, frappe-socketio, erpnext]

        steps:
            - name: Checkout ðŸ›Ž
              uses: actions/checkout@v2.3.4

            - name: Docker meta
              if: success()
              id: docker_meta
              shell: bash
              env:
                  frappe_version: ${{matrix.frappe_version}}
                  erpnext_version: ${{matrix.erpnext_version}}
                  target: ${{matrix.target}}
              run: |
                  image=fengsiio/${target}
                  echo "::group::Tags"
                  [ "${target}" = "erpnext" ] && version=$erpnext_version || version=$frappe_version
                  tags=$image:$(echo $version | sed 's/[^0-9.]*//g')
                  echo "::set-output name=tags::${tags}"
                  echo "${tags}"
                  echo "::endgroup::"

            - name: Set up QEMU
              if: success()
              uses: docker/setup-qemu-action@v1

            - name: Set up Docker Buildx
              if: success()
              uses: docker/setup-buildx-action@v1

            - name: Cache Docker layers
              if: success()
              uses: actions/cache@v2.1.5
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}
                  restore-keys: |
                      ${{ runner.os }}-buildx

            - name: Login to Registry
              if: success()
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push
              if: success()
              uses: docker/build-push-action@v2
              with:
                  push: true
                  platforms: linux/amd64
                  target: ${{matrix.target}}
                  build-args: |
                      FRAPPE_VERSION=${{ matrix.frappe_version }}
                      ERPNEXT_VERSION=${{ matrix.erpnext_version }}
                  tags: ${{ steps.docker_meta.outputs.tags }}
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
